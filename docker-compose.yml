version: "3.5"
services:
  web:
    container_name: panc
    restart: always
    build: .
    command: gunicorn myproject.wsgi:application -c gunicorn.conf.py
    depends_on:
      - db
      - redis
#      - celery
#      - celery-beat
    ports:
      - "8000:8000"
    volumes:
      - "/var/services/panc/media:/var/services/panc/media"
      - "/var/services/panc/vault:/var/services/panc/vault"
      - "/var/services/panc/static:/var/services/panc/static"
    env_file:
      - assets/base.env
    networks:
      - main
  db:
    container_name: panc-db
    restart: always
    image: "postgres:15-alpine"
    env_file:
      - assets/db.env
    volumes:
      - "/var/services/panc/db:/var/lib/postgresql/data"
    expose:
      - "5432"
    networks:
      - main
  redis:
    container_name: panc-redis
    restart: always
    image: "redis:6-alpine"
    expose:
      - "6379"
    networks:
      - main
#  celery:
#    build: .
##    command: sh -c "cd project && celery -A settings worker -l INFO"
#    volumes:
#      - "/var/services/panc/celery:/var/services/panc/celery"
#      - "/var/services/panc/vault:/var/services/panc/vault"
#    env_file:
#      - assets/base.env
#    depends_on:
#      - redis
#      - db
#    networks:
#      - main
#  celery-beat:
#    build: .
##    command: sh -c "cd project && celery -A settings beat -l INFO"
#    volumes:
#      - "/var/services/panc/celery:/var/services/panc/celery"
#      - "/var/services/panc/vault:/var/services/panc/vault"
#    env_file:
#      - assets/base.env
#    depends_on:
#      - redis
#      - db
#    networks:
#      - main

networks:
  main:
    name: panc
    driver: bridge
